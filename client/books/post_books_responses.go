// Code generated by go-swagger; DO NOT EDIT.

package books

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"librarian/models"
)

// PostBooksReader is a Reader for the PostBooks structure.
type PostBooksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBooksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostBooksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPostBooksDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostBooksOK creates a PostBooksOK with default headers values
func NewPostBooksOK() *PostBooksOK {
	return &PostBooksOK{}
}

/*
PostBooksOK describes a response with status code 200, with default header values.

Created a book
*/
type PostBooksOK struct {
	Payload *models.Book
}

// IsSuccess returns true when this post books o k response has a 2xx status code
func (o *PostBooksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post books o k response has a 3xx status code
func (o *PostBooksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post books o k response has a 4xx status code
func (o *PostBooksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post books o k response has a 5xx status code
func (o *PostBooksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post books o k response a status code equal to that given
func (o *PostBooksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post books o k response
func (o *PostBooksOK) Code() int {
	return 200
}

func (o *PostBooksOK) Error() string {
	return fmt.Sprintf("[POST /books][%d] postBooksOK  %+v", 200, o.Payload)
}

func (o *PostBooksOK) String() string {
	return fmt.Sprintf("[POST /books][%d] postBooksOK  %+v", 200, o.Payload)
}

func (o *PostBooksOK) GetPayload() *models.Book {
	return o.Payload
}

func (o *PostBooksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Book)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBooksDefault creates a PostBooksDefault with default headers values
func NewPostBooksDefault(code int) *PostBooksDefault {
	return &PostBooksDefault{
		_statusCode: code,
	}
}

/*
PostBooksDefault describes a response with status code -1, with default header values.

bad input for book
*/
type PostBooksDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this post books default response has a 2xx status code
func (o *PostBooksDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post books default response has a 3xx status code
func (o *PostBooksDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post books default response has a 4xx status code
func (o *PostBooksDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post books default response has a 5xx status code
func (o *PostBooksDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post books default response a status code equal to that given
func (o *PostBooksDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the post books default response
func (o *PostBooksDefault) Code() int {
	return o._statusCode
}

func (o *PostBooksDefault) Error() string {
	return fmt.Sprintf("[POST /books][%d] PostBooks default  %+v", o._statusCode, o.Payload)
}

func (o *PostBooksDefault) String() string {
	return fmt.Sprintf("[POST /books][%d] PostBooks default  %+v", o._statusCode, o.Payload)
}

func (o *PostBooksDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostBooksDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package books

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"librarian/models"
)

// GetBooksReader is a Reader for the GetBooks structure.
type GetBooksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBooksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBooksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetBooksDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBooksOK creates a GetBooksOK with default headers values
func NewGetBooksOK() *GetBooksOK {
	return &GetBooksOK{}
}

/*
GetBooksOK describes a response with status code 200, with default header values.

All books from the library.
*/
type GetBooksOK struct {
	Payload []*models.Book
}

// IsSuccess returns true when this get books o k response has a 2xx status code
func (o *GetBooksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get books o k response has a 3xx status code
func (o *GetBooksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get books o k response has a 4xx status code
func (o *GetBooksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get books o k response has a 5xx status code
func (o *GetBooksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get books o k response a status code equal to that given
func (o *GetBooksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get books o k response
func (o *GetBooksOK) Code() int {
	return 200
}

func (o *GetBooksOK) Error() string {
	return fmt.Sprintf("[GET /books][%d] getBooksOK  %+v", 200, o.Payload)
}

func (o *GetBooksOK) String() string {
	return fmt.Sprintf("[GET /books][%d] getBooksOK  %+v", 200, o.Payload)
}

func (o *GetBooksOK) GetPayload() []*models.Book {
	return o.Payload
}

func (o *GetBooksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBooksDefault creates a GetBooksDefault with default headers values
func NewGetBooksDefault(code int) *GetBooksDefault {
	return &GetBooksDefault{
		_statusCode: code,
	}
}

/*
GetBooksDefault describes a response with status code -1, with default header values.

bad input for book
*/
type GetBooksDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get books default response has a 2xx status code
func (o *GetBooksDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get books default response has a 3xx status code
func (o *GetBooksDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get books default response has a 4xx status code
func (o *GetBooksDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get books default response has a 5xx status code
func (o *GetBooksDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get books default response a status code equal to that given
func (o *GetBooksDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get books default response
func (o *GetBooksDefault) Code() int {
	return o._statusCode
}

func (o *GetBooksDefault) Error() string {
	return fmt.Sprintf("[GET /books][%d] GetBooks default  %+v", o._statusCode, o.Payload)
}

func (o *GetBooksDefault) String() string {
	return fmt.Sprintf("[GET /books][%d] GetBooks default  %+v", o._statusCode, o.Payload)
}

func (o *GetBooksDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBooksDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

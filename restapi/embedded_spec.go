// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Application to handle books and collection of books.",
    "title": "A library handling application",
    "version": "0.1.0"
  },
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Find book by isbn",
        "parameters": [
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "All books from the library.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/book"
              }
            }
          },
          "default": {
            "description": "bad input for book",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "books"
        ],
        "summary": "Create a book",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created a book",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          "default": {
            "description": "bad input for book",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/books/{isbn}": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Find book by isbn",
        "parameters": [
          {
            "type": "string",
            "description": "isbn code",
            "name": "isbn",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Book matching the requested isbn",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          "404": {
            "description": "Book not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "bad input parametr/missing book",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "books"
        ],
        "summary": "Update book by isbn",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          {
            "type": "string",
            "description": "isbn code",
            "name": "isbn",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Book matching the requested isbn",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          "default": {
            "description": "bad input parametr/missing book",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "books"
        ],
        "summary": "Delete book by isbn",
        "parameters": [
          {
            "type": "string",
            "description": "isbn code",
            "name": "isbn",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content on successful delete",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          "404": {
            "description": "Book not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "bad input parametr/missing book",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "Get one or all collections",
        "parameters": [
          {
            "type": "string",
            "description": "Name of collection",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "All collections from the library.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/collection"
              }
            }
          },
          "404": {
            "description": "Collection not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "bad input parameter/missing collection",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "collections"
        ],
        "summary": "Update collection",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/collection"
            }
          },
          {
            "type": "string",
            "description": "Name of collection",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Collection by given name.",
            "schema": {
              "$ref": "#/definitions/collection"
            }
          },
          "404": {
            "description": "Collection not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "bad input parameter/missing collection",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "collections"
        ],
        "summary": "Create a collection",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/collection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created a collection",
            "schema": {
              "$ref": "#/definitions/collection"
            }
          },
          "default": {
            "description": "bad input for collection",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "collections"
        ],
        "summary": "Delete collection by name",
        "parameters": [
          {
            "type": "string",
            "description": "Name of collection",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content on successful delete",
            "schema": {
              "$ref": "#/definitions/collection"
            }
          },
          "default": {
            "description": "bad input parametr/missing collection",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "book": {
      "type": "object",
      "required": [
        "isbn"
      ],
      "properties": {
        "author": {
          "type": "string",
          "example": "Michael Kerrisk"
        },
        "genre": {
          "type": "string",
          "example": "Programming manual"
        },
        "isbn": {
          "type": "string",
          "example": "1593272200"
        },
        "published": {
          "type": "string",
          "format": "date",
          "example": "2023-04-24"
        },
        "title": {
          "type": "string",
          "example": "The Linux Programming Interface: A Linux and UNIX System Programming Handbook"
        }
      }
    },
    "collection": {
      "type": "object",
      "required": [
        "name",
        "isbn"
      ],
      "properties": {
        "isbn": {
          "description": "Isbns for books in the collection",
          "type": "array",
          "items": {
            "type": "string",
            "example": "1593272200"
          }
        },
        "name": {
          "type": "string",
          "example": "19th century tech"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Application to handle books and collection of books.",
    "title": "A library handling application",
    "version": "0.1.0"
  },
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Find book by isbn",
        "parameters": [
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "All books from the library.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/book"
              }
            }
          },
          "default": {
            "description": "bad input for book",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "books"
        ],
        "summary": "Create a book",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created a book",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          "default": {
            "description": "bad input for book",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/books/{isbn}": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Find book by isbn",
        "parameters": [
          {
            "type": "string",
            "description": "isbn code",
            "name": "isbn",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Book matching the requested isbn",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          "404": {
            "description": "Book not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "bad input parametr/missing book",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "books"
        ],
        "summary": "Update book by isbn",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          {
            "type": "string",
            "description": "isbn code",
            "name": "isbn",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Book matching the requested isbn",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          "default": {
            "description": "bad input parametr/missing book",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "books"
        ],
        "summary": "Delete book by isbn",
        "parameters": [
          {
            "type": "string",
            "description": "isbn code",
            "name": "isbn",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content on successful delete",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          "404": {
            "description": "Book not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "bad input parametr/missing book",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "Get one or all collections",
        "parameters": [
          {
            "type": "string",
            "description": "Name of collection",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "All collections from the library.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/collection"
              }
            }
          },
          "404": {
            "description": "Collection not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "bad input parameter/missing collection",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "collections"
        ],
        "summary": "Update collection",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/collection"
            }
          },
          {
            "type": "string",
            "description": "Name of collection",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Collection by given name.",
            "schema": {
              "$ref": "#/definitions/collection"
            }
          },
          "404": {
            "description": "Collection not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "bad input parameter/missing collection",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "collections"
        ],
        "summary": "Create a collection",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/collection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created a collection",
            "schema": {
              "$ref": "#/definitions/collection"
            }
          },
          "default": {
            "description": "bad input for collection",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "collections"
        ],
        "summary": "Delete collection by name",
        "parameters": [
          {
            "type": "string",
            "description": "Name of collection",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content on successful delete",
            "schema": {
              "$ref": "#/definitions/collection"
            }
          },
          "default": {
            "description": "bad input parametr/missing collection",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "book": {
      "type": "object",
      "required": [
        "isbn"
      ],
      "properties": {
        "author": {
          "type": "string",
          "example": "Michael Kerrisk"
        },
        "genre": {
          "type": "string",
          "example": "Programming manual"
        },
        "isbn": {
          "type": "string",
          "example": "1593272200"
        },
        "published": {
          "type": "string",
          "format": "date",
          "example": "2023-04-24"
        },
        "title": {
          "type": "string",
          "example": "The Linux Programming Interface: A Linux and UNIX System Programming Handbook"
        }
      }
    },
    "collection": {
      "type": "object",
      "required": [
        "name",
        "isbn"
      ],
      "properties": {
        "isbn": {
          "description": "Isbns for books in the collection",
          "type": "array",
          "items": {
            "type": "string",
            "example": "1593272200"
          }
        },
        "name": {
          "type": "string",
          "example": "19th century tech"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
}

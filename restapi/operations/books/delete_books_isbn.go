// Code generated by go-swagger; DO NOT EDIT.

package books

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteBooksIsbnHandlerFunc turns a function with the right signature into a delete books isbn handler
type DeleteBooksIsbnHandlerFunc func(DeleteBooksIsbnParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteBooksIsbnHandlerFunc) Handle(params DeleteBooksIsbnParams) middleware.Responder {
	return fn(params)
}

// DeleteBooksIsbnHandler interface for that can handle valid delete books isbn params
type DeleteBooksIsbnHandler interface {
	Handle(DeleteBooksIsbnParams) middleware.Responder
}

// NewDeleteBooksIsbn creates a new http.Handler for the delete books isbn operation
func NewDeleteBooksIsbn(ctx *middleware.Context, handler DeleteBooksIsbnHandler) *DeleteBooksIsbn {
	return &DeleteBooksIsbn{Context: ctx, Handler: handler}
}

/*
	DeleteBooksIsbn swagger:route DELETE /books/{isbn} books deleteBooksIsbn

Delete book by isbn
*/
type DeleteBooksIsbn struct {
	Context *middleware.Context
	Handler DeleteBooksIsbnHandler
}

func (o *DeleteBooksIsbn) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteBooksIsbnParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

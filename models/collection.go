// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Collection collection
//
// swagger:model collection
type Collection struct {

	// Isbns for books in the collection
	// Required: true
	Isbn []string `json:"isbn"`

	// name
	// Example: 19th century tech
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this collection
func (m *Collection) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIsbn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Collection) validateIsbn(formats strfmt.Registry) error {

	if err := validate.Required("isbn", "body", m.Isbn); err != nil {
		return err
	}

	return nil
}

func (m *Collection) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this collection based on context it is used
func (m *Collection) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Collection) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Collection) UnmarshalBinary(b []byte) error {
	var res Collection
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
